# ASP.NET Core (.NET Framework)
# Build and test ASP.NET Core projects targeting the full .NET Framework.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- '*'     #Trigger branch, e.g. master, feature/xxxx, star means all branches will trigger azure devops build in each push, PR, master merge etc.

pool:
  vmImage: 'ubuntu-18.04'     #Specfy the agent image name, https://docs.microsoft.com/en-us/azure/devops/pipelines/agents/hosted?view=azure-devops&tabs=yaml
  demands:
    - npm

variables:              #Define the varible here
  solution: '**/*.sln'
  project: '**/*.csproj'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
  dotnetSdkVersion: '3.1.300'  

steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core SDK 3.1.300'
  inputs:
    packageType: SDK
    version: '$(dotnetSdkVersion)'

- task: Npm@1
  displayName: 'Run NPM install'
  inputs:
    verbose: false

- script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
  displayName: 'Compile Sass assets'

- task: gulp@1
  displayName: 'Run gulp tasks'

- script:  echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt
  displayName: 'Write build info'
  workingDirectory:  '$(wwwrootDir)'

- task: DotNetCoreCLI@2
  displayName:  'Restore project dependencies'
  inputs:
    command: restore          #install dependent package which is listed in package.json
    projects: '$(project)'

- template: templates/build.yml   #Build the project with debug
  parameters:
    buildConfiguration: 'Debug'
    project: '$(project)'

- template: templates/build.yml   #Build the project with relrease
  parameters:
    buildConfiguration: 'Release'
    project: '$(project)'

- task: PublishBuildArtifacts@1
  displayName: 'Public Artifact: drop'
  condition: succeeded()
